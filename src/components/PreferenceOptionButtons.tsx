import React from 'react';
import {StyleSheet, View} from 'react-native';
import OptionSingleButton from './atoms/button/OptionSingleButton.tsx';

const PreferenceOptionButtons = ({
  step,
  onSelectOption,
  isEmojiRemoved = false,
  isSingleSelect = false,
  selectedCategory = '',
  selectedCategories = [],
}) => {
  const optionsForSteps = {
    1: ['üõçÔ∏è ÏÜåÎπÑÌòï', 'üñºÔ∏è Ï†ÑÏãúÌòï', 'üèÉ Ï≤¥ÌóòÌòï', 'Î¨¥Î£å Ï≤¥ÌóòÏù¥ÏóàÏúºÎ©¥ Ï¢ãÍ≤†Ïñ¥Ïöî'],
    2: [
      'üíÑ Ìå®ÏÖò/Î∑∞Ìã∞',
      'ü•∞ Ï∫êÎ¶≠ÌÑ∞',
      'üçΩÔ∏è ÏãùÌíà/ÏùåÎ£å',
      'üìö ÏõπÌà∞/Ïï†ÎãàÎ©îÏù¥ÏÖò',
      'üõãÔ∏è Ïù∏ÌÖåÎ¶¨Ïñ¥/ÏÜåÌíà',
      'üé¨ ÏòÅÌôî/ÎìúÎùºÎßà/ÏòàÎä•',
      'üéº ÎÆ§ÏßÄÏª¨/Ïó∞Í∑π',
      '‚öΩ Ïä§Ìè¨Ï∏†',
      'üéÆ Í≤åÏûÑ',
      'üíª IT/ÌÖåÌÅ¨',
      'üé§ K-POP',
      'üç∑ Ï£ºÎ•ò',
      'ü™¥ ÎèôÎ¨º/ÏãùÎ¨º',
      'Í∏∞ÌÉÄ',
    ],
    3: [
      'ÎÇò ÌòºÏûê Î∞©Î¨∏Ìï¥Ïöî',
      'ÏπúÍµ¨ÏôÄ Î∞©Î¨∏Ìï¥Ïöî',
      'Í∞ÄÏ°±Í≥º Î∞©Î¨∏Ìï¥Ïöî',
      'Ïó∞Ïù∏Í≥º Î∞©Î¨∏Ìï¥Ïöî',
    ],
    4: ['Ï†ÑÏ≤¥', '7ÏÑ∏ Ïù¥ÏÉÅ', '12ÏÑ∏ Ïù¥ÏÉÅ', '15ÏÑ∏ Ïù¥ÏÉÅ', 'ÏÑ±Ïù∏'],
  };
  const handlePress = option => {
    if (isSingleSelect) {
      // Ïù¥Î™®ÏßÄ Ï†úÍ±∞ Î°úÏßÅÏùÑ Ï†ÅÏö©
      const optionWithoutEmoji = removeEmoji(option);
      onSelectOption(optionWithoutEmoji); // ÏàòÏ†ïÎêú ÏòµÏÖò Í∞íÏùÑ onSelectOptionÏóê Ï†ÑÎã¨
    } else {
      // Î≥µÏàò ÏÑ†ÌÉù Î™®Îìú Î°úÏßÅ (Î≥ÄÍ≤Ω ÏóÜÏùå)
      onSelectOption(option, step);
    }
  };
  const currentOptions = optionsForSteps[step];

  // Ïù¥Î™®Ìã∞ÏΩòÏùÑ Ï†úÍ±∞ÌïòÎäî Ìï®Ïàò
  const removeEmoji = text =>
    text
      .replace(
        /[\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{1F700}-\u{1F77F}\u{1F780}-\u{1F7FF}\u{1F800}-\u{1F8FF}\u{1F900}-\u{1F9FF}\u{1FA00}-\u{1FA6F}\u{1FA70}-\u{1FAFF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}\u{E000}-\u{F8FF}\u{FE00}-\u{FE0F}\u{1F000}-\u{1F02F}\u{1F0A0}-\u{1F0FF}\u{1F100}-\u{1F64F}\u{1F680}-\u{1F6FF}\u{1F910}-\u{1F96B}\u{1F980}-\u{1F9E0}]/gu,
        '',
      )
      .trim();

  return (
    <View style={styles.optionsContainer}>
      {currentOptions.map((option, index) => (
        <OptionSingleButton
          key={index}
          id={index.toString()}
          title={isEmojiRemoved ? removeEmoji(option) : option}
          onPress={() => handlePress(option)}
          isSelected={
            isSingleSelect
              ? removeEmoji(option.toString()) === selectedCategory // Îã®Ïùº ÏÑ†ÌÉù Î™®ÎìúÏóêÏÑúÎäî selectedCategoryÎ•º Í∏∞Ï§ÄÏúºÎ°ú ÌåêÎã®
              : selectedCategories.includes(option) // Î≥µÏàò ÏÑ†ÌÉù Î™®ÎìúÏóêÏÑúÎäî Í∏∞Ï°¥ Î°úÏßÅ Ïú†ÏßÄ
          }
        />
      ))}
    </View>
  );
};

const styles = StyleSheet.create({
  optionsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: 10,
  },
  container: {
    flex: 1,
    backgroundColor: 'white',
  },
  contentContainer: {
    alignItems: 'center',
    paddingTop: 20,
  },
  progressBarFill: {
    height: '100%',
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingBottom: 20,
    paddingTop: 10,
  },
  buttonRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
    paddingHorizontal: 20,
    justifyContent: 'space-around',
  },
  // optionsContainer Î∞è Í∏∞ÌÉÄ Ïä§ÌÉÄÏùº Ïú†ÏßÄ
  optionsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center',
    alignItems: 'center',
  },
  centeredView: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: 22,
  },
  modalView: {
    margin: 20,
    backgroundColor: 'white',
    borderRadius: 20,
    paddingHorizontal: 35,
    paddingBottom: 15,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  buttonSkip: {
    borderRadius: 20,
    padding: 10,
    elevation: 2,
    marginRight: 10,
  },
  buttonSetNow: {
    borderRadius: 20,
    padding: 10,
    elevation: 2,
    marginLeft: 10,
  },
  overlayStyle: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Í≤ÄÏùÄÏÉâ Î∞∞Í≤ΩÏóê 50% Î∂àÌà¨Î™ÖÎèÑ
  },
});

export default PreferenceOptionButtons;
